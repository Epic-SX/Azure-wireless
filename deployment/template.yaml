AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: KOENOTE Audio Processing System with Azure Speech API Integration

Parameters:
  OpenAIApiKey:
    Type: String
    Description: OpenAI API Key for Whisper API (fallback)
    NoEcho: true
  AzureSpeechKey:
    Type: String
    Description: Azure Speech API Key
    Default: "DKKWO9yK2f0wZLIFMtqbVn5CeNmaCrBLODF8Dj9NCUfmTwMijNmNJQQJ99BFACi0881XJ3w3AAAYACOG9wsm"
    NoEcho: true
  AzureSpeechEndpoint:
    Type: String
    Description: Azure Speech API Endpoint
    Default: "https://japaneast.api.cognitive.microsoft.com/"
  AzureSpeechRegion:
    Type: String
    Description: Azure Speech API Region
    Default: "japaneast"
  LanguagePriority:
    Type: String
    Description: Comma-separated list of languages in priority order
    Default: "ja-JP,zh-CN,ko-KR,en-US,fr-FR,de-DE,es-ES,it-IT,pt-BR,ru-RU"
  DangerousWords:
    Type: String
    Description: Comma-separated list of dangerous words to detect
    Default: "shine,korosu,koroshi,jisatsu,bakuhatsu,bakudan,kiken,kyouhaku"
  DeviceHeartbeatInterval:
    Type: Number
    Description: Interval in seconds to check for device heartbeat
    Default: 30
  CorsOrigin:
    Type: String
    Description: CORS allowed origin
    Default: "*"

Globals:
  Function:
    Timeout: 300
    MemorySize: 1024
    Runtime: python3.9
    Environment:
      Variables:
        OPENAI_API_KEY: !Ref OpenAIApiKey
        AZURE_SPEECH_KEY: !Ref AzureSpeechKey
        AZURE_SPEECH_ENDPOINT: !Ref AzureSpeechEndpoint
        AZURE_SPEECH_REGION: !Ref AzureSpeechRegion
        LANGUAGE_PRIORITY: !Ref LanguagePriority
        DANGEROUS_WORDS: !Ref DangerousWords
        DEVICE_HEARTBEAT_INTERVAL: !Ref DeviceHeartbeatInterval

Resources:
  rePrWirelessAudio:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "rePr-wireless-stack-rePr-wireless-audio-${AWS::Region}"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - !Ref CorsOrigin
            MaxAge: 3600

  rePrWirelessTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "rePr-wirelessRecordings"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: device_id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: DeviceIndex
          KeySchema:
            - AttributeName: device_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  rePrWirelessFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: rePr-wireless-function
      CodeUri: ../backend/lambda/
      Handler: lambda_function.lambda_handler
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref rePrWirelessAudio
        - DynamoDBCrudPolicy:
            TableName: !Ref rePrWirelessTable
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt rePrWirelessStateMachine.Name
      Environment:
        Variables:
          TABLE_NAME: !Ref rePrWirelessTable
          AUDIO_BUCKET_NAME: !Ref rePrWirelessAudio
          STEP_FUNCTION_ARN: !Ref rePrWirelessStateMachine
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /koenoto/{proxy+}
            Method: ANY
            RestApiId: !Ref rePrWirelessApi

  rePrWirelessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Sub "'${CorsOrigin}'"
      Auth:
        DefaultAuthorizer: NONE

  rePrWirelessStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: rePr-wireless-state-machine
      RoleArn: !GetAtt StepFunctionsExecutionRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "Process audio recordings in parallel",
          "StartAt": "ProcessChunks",
          "States": {
            "ProcessChunks": {
              "Type": "Map",
              "ItemsPath": "$.audioKeys",
              "MaxConcurrency": 5,
              "Iterator": {
                "StartAt": "ProcessSingleChunk",
                "States": {
                  "ProcessSingleChunk": {
                    "Type": "Task",
                    "Resource": "${rePrWirelessFunction.Arn}",
                    "Parameters": {
                      "chunkKey.$": "$",
                      "bucket.$": "$.bucket",
                      "sessionId.$": "$.sessionId"
                    },
                    "End": true
                  }
                }
              },
              "Next": "CombineResults"
            },
            "CombineResults": {
              "Type": "Task",
              "Resource": "${rePrWirelessFunction.Arn}",
              "Parameters": {
                "sessionId.$": "$.sessionId",
                "userId.$": "$.userId",
                "transcriptionResults.$": "$",
                "completeAudioUrl.$": "$.completeAudioUrl",
                "saveToDb": true
              },
              "End": true
            }
          }
        }

  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref rePrWirelessFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${rePrWirelessApi}/*/*/*"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${rePrWirelessApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  BucketName:
    Description: "S3 bucket for audio files"
    Value: !Ref rePrWirelessAudio
  TableName:
    Description: "DynamoDB table for recordings"
    Value: !Ref rePrWirelessTable
  FunctionName:
    Description: "Lambda function name"
    Value: !Ref rePrWirelessFunction
  StateMachineName:
    Description: "Step Functions state machine name"
    Value: !Ref rePrWirelessStateMachine 
